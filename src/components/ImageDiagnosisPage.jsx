import React, { useState, useRef, useEffect } from 'react';
import { Button, Card, Container, Row, Col } from 'react-bootstrap';
import { motion } from 'framer-motion';
import './ImageDiagnosisPage.css';

const commonDiseases = [
  {
    name: 'Powdery Mildew / ‡≤™‡≥å‡≤°‡≤∞‡≤ø ‡≤Æ‡≤ø‡≤≤‡≥ç‡≤°‡≥ç‡≤Ø‡≥Ç',
    imageUrl: 'https://gardenerspath.com/wp-content/uploads/2020/09/Tomato-Plant-Suffering-with-Botrytis-Gray-Mold.jpg',
    solution: 'Use sulfur-based fungicides and maintain good air circulation.\n‡≤∏‡≤≤‡≥ç‡≤´‡≤∞‡≥ç ‡≤Ü‡≤ß‡≤æ‡≤∞‡≤ø‡≤§ ‡≤∂‡≤ø‡≤≤‡≥Ä‡≤Ç‡≤ß‡≥ç‡≤∞‡≤®‡≤æ‡≤∂‡≤ï‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤â‡≤§‡≥ç‡≤§‡≤Æ ‡≤ó‡≤æ‡≤≥‡≤ø‡≤ö‡≤≤‡≤®‡≤µ‡≤≤‡≤®‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤ï‡≤æ‡≤Ø‡≥ç‡≤¶‡≥Å‡≤ï‡≥ä‡≤≥‡≥ç‡≤≥‡≤ø.',
  },
  {
    name: 'Leaf Rust / ‡≤é‡≤≤‡≥Ü ‡≤ï‡≤ú‡≥ç‡≤ú‡≤≥‡≤ø',
    imageUrl: 'https://i0.wp.com/geopard.tech/wp-content/uploads/2021/12/Crop-Diseases_-Types-Causes-and-Symptoms-3-min-1.jpg?fit=1200%2C650&ssl=1',
    solution: 'Remove infected leaves and apply appropriate fungicides.\n‡≤∏‡≤Ç‡≤ï‡≥ç‡≤∞‡≤æ‡≤Æ‡≤ø‡≤§ ‡≤é‡≤≤‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤§‡≥Ü‡≤ó‡≥Ü‡≤¶‡≥Å‡≤π‡≤æ‡≤ï‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∏‡≥Ç‡≤ï‡≥ç‡≤§ ‡≤∂‡≤ø‡≤≤‡≥Ä‡≤Ç‡≤ß‡≥ç‡≤∞‡≤®‡≤æ‡≤∂‡≤ï‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤ø.',
  },
  {
    name: 'Blight / ‡≤¨‡≥ç‡≤≤‡≥à‡≤ü‡≥ç',
    imageUrl: 'https://tse1.mm.bing.net/th?id=OIP.05YCbGvrs9Vqtfta9hsUIAHaE7&pid=Api&P=0&h=180',
    solution: 'Use copper-based fungicides and avoid overhead watering.\n‡≤§‡≤æ‡≤Æ‡≥ç‡≤∞ ‡≤Ü‡≤ß‡≤æ‡≤∞‡≤ø‡≤§ ‡≤∂‡≤ø‡≤≤‡≥Ä‡≤Ç‡≤ß‡≥ç‡≤∞‡≤®‡≤æ‡≤∂‡≤ï‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Æ‡≥á‡≤≤‡≥ç‡≤Æ‡≥Ü‡≥ñ‡≤Ø‡≤ø‡≤Ç‡≤¶ ‡≤®‡≥Ä‡≤∞‡≤ø‡≤®‡≥ä‡≤§‡≥ç‡≤§‡≤°‡≤µ‡≤ø‡≤≤‡≥ç‡≤≤‡≤¶‡≤ø‡≤∞‡≤≤‡≤ø.',
  },
  {
    name: 'Downy Mildew / ‡≤°‡≥å‡≤®‡≤ø ‡≤Æ‡≤ø‡≤≤‡≥ç‡≤°‡≥ç‡≤Ø‡≥Ç',
    imageUrl: 'https://tse1.mm.bing.net/th?id=OIP.kLA_H_gJINllMTLPrv0zKQHaEK&pid=Api&P=0&h=180',
    solution: 'Improve air circulation and apply fungicide sprays.\n‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≥Å ‡≤ó‡≤æ‡≤≥‡≤ø‡≤ö‡≤≤‡≤®‡≥Ü ‡≤í‡≤¶‡≤ó‡≤ø‡≤∏‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∂‡≤ø‡≤≤‡≥Ä‡≤Ç‡≤ß‡≥ç‡≤∞‡≤®‡≤æ‡≤∂‡≤ï‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤ø‡≤∞‡≤ø.',
  },
  {
    name: 'Root Rot / ‡≤¨‡≥á‡≤∞‡≥Å ‡≤ï‡≥ä‡≤≥‡≥Ü',
    imageUrl: 'https://tse4.mm.bing.net/th?id=OIP.YJyHZ9kSs40h-aavDSJJBAHaFE&pid=Api&P=0&h=180',
    solution: 'Ensure proper drainage and avoid overwatering.\n‡≤∏‡≤∞‡≤ø‡≤Ø‡≤æ‡≤¶ ‡≤®‡≤¶‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤ñ‡≤ö‡≤ø‡≤§‡≤™‡≤°‡≤ø‡≤∏‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≥Å ‡≤®‡≥Ä‡≤∞‡≤ø‡≤°‡≤¶‡≤ø‡≤∞‡≤ø.',
  },
  {
    name: 'Anthracnose / ‡≤Ü‡≤Ç‡≤•‡≥ç‡≤∞‡≤æ‡≤ï‡≥ç‡≤®‡≥ã‡≤∏‡≥ç',
    imageUrl: 'https://tse4.mm.bing.net/th?id=OIP.wbNho5LS8ZCoW8O3IpU_AQHaE7&pid=Api&P=0&h=180',
    solution: 'Remove infected parts and apply fungicides.\n‡≤∏‡≤Ç‡≤ï‡≥ç‡≤∞‡≤æ‡≤Æ‡≤ø‡≤§ ‡≤≠‡≤æ‡≤ó‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤§‡≥Ü‡≤ó‡≥Ü‡≤¶‡≥Å‡≤π‡≤æ‡≤ï‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∂‡≤ø‡≤≤‡≥Ä‡≤Ç‡≤ß‡≥ç‡≤∞‡≤®‡≤æ‡≤∂‡≤ï ‡≤¨‡≤≥‡≤∏‡≤ø.',
  },
  {
    name: 'Bacterial Spot / ‡≤¨‡≥ç‡≤Ø‡≤æ‡≤ï‡≥ç‡≤ü‡≥Ä‡≤∞‡≤ø‡≤Ø‡≤≤‡≥ç ‡≤∏‡≥ç‡≤™‡≤æ‡≤ü‡≥ç',
    imageUrl: 'https://tse1.mm.bing.net/th?id=OIP.K-akrirnR6g0xNhO7-A4RgHaD4&pid=Api&P=0&h=180',
    solution: 'Use copper sprays and disease-free seeds.\n‡≤§‡≤æ‡≤Æ‡≥ç‡≤∞‡≤¶ ‡≤∏‡≥ç‡≤™‡≥ç‡≤∞‡≥á ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∞‡≥ã‡≤ó‡≤Æ‡≥Å‡≤ï‡≥ç‡≤§ ‡≤¨‡≥Ä‡≤ú‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤ø.',
  },
  {
    name: 'Wilt / ‡≤á‡≤≥‡≤ø‡≤ú‡≤æ‡≤∞‡≤ø‡≤§‡≤®‡≤ï',
    imageUrl: 'https://tse1.mm.bing.net/th?id=OIP.6nnozVMXcaZxQMKnacW7wgHaFj&pid=Api&P=0&h=180',
    solution: 'Solarize soil and rotate crops.\n‡≤Æ‡≤£‡≥ç‡≤£‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≥Ç‡≤∞‡≥ç‡≤Ø‡≤∞‡≤∂‡≥ç‡≤Æ‡≤ø‡≤Ø‡≤ø‡≤Ç‡≤¶ ‡≤∂‡≥Å‡≤¶‡≥ç‡≤ß‡≤ó‡≥ä‡≤≥‡≤ø‡≤∏‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤¨‡≥Ü‡≤≥‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤¶‡≤≤‡≤æ‡≤Ø‡≤ø‡≤∏‡≤ø.',
  },
  {
    name: 'Mosaic Virus / ‡≤Æ‡≥ã‡≤∏‡≤æ‡≤Ø‡≤ø‡≤ï‡≥ç ‡≤µ‡≥à‡≤∞‡≤∏‡≥ç',
    imageUrl: 'https://tse1.mm.bing.net/th?id=OIP.7rrr4-Y2KtGeIHUhFl_iigHaEF&pid=Api&P=0&h=180',
    solution: 'Remove affected plants and control insect vectors.\n‡≤™‡≥Ä‡≤°‡≤ø‡≤§ ‡≤∏‡≤∏‡≥ç‡≤Ø‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤§‡≥Ü‡≤ó‡≥Ü‡≤¶‡≥Å‡≤π‡≤æ‡≤ï‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤ï‡≥Ä‡≤ü ‡≤®‡≤ø‡≤Ø‡≤Ç‡≤§‡≥ç‡≤∞‡≤£ ‡≤Æ‡≤æ‡≤°‡≤ø.',
  },
  {
    name: 'Scab / ‡≤∏‡≥ç‡≤ï‡≥ç‡≤Ø‡≤æ‡≤¨‡≥ç',
    imageUrl: 'https://tse3.mm.bing.net/th?id=OIP.MDQFtq3aOaunIuu3uI-O-wHaFg&pid=Api&P=0&h=180',
    solution: 'Apply lime and resistant varieties.\n‡≤ö‡≥Ç‡≤®‡≤æ ‡≤¨‡≤≥‡≤∏‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤™‡≥ç‡≤∞‡≤§‡≤ø‡≤∞‡≥ã‡≤ß‡≤ï ‡≤§‡≤≥‡≤ø‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤ø‡≤∞‡≤ø.',
  },
];

const ImageDiagnosisPage = () => {
  const [image, setImage] = useState(null);
  const [diagnosisResult, setDiagnosisResult] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const audioRef = useRef(null);
  const fileInputRef = useRef(null); // ‚úÖ File input ref

  useEffect(() => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }, []);

  const handleImageChange = (e) => {
    if (e.target.files && e.target.files[0]) {
      setImage(URL.createObjectURL(e.target.files[0]));
      setDiagnosisResult('');
    }
  };

  const analyzeImage = async () => {
  const file = fileInputRef.current?.files?.[0];
  if (!file) {
    console.warn("‚ö†Ô∏è No file selected");
    return;
  }

  setIsLoading(true);
  try {
    const formData = new FormData();
    formData.append('image', file);

    console.log("üîç Sending image to backend...");
    const response = await fetch('http://localhost:5000/api/ai-diagnose', {
      method: 'POST',
      body: formData,
    });

    const data = await response.json();
    console.log("‚úÖ AI Diagnosis Response:", data);
    setDiagnosisResult(data.diagnosis);

   if ('speechSynthesis' in window) {
  const englishPart = data.diagnosis.split('\n\n')[1] || data.diagnosis;
  const utterance = new SpeechSynthesisUtterance(englishPart);
  utterance.lang = 'en-IN';
  window.speechSynthesis.speak(utterance);
}

  } catch (err) {
    console.error("‚ùå Error calling backend:", err);
    setDiagnosisResult('‚ùå Error analyzing image. Please try again.');
  }
  setIsLoading(false);
};


  return (
    <Container className="py-5">
      <h2 className="text-3xl font-bold text-center mb-4">üì∑ Crop Diagnosis / ‡≤¨‡≥Ü‡≤≥‡≥Ü ‡≤∞‡≥ã‡≤ó ‡≤™‡≤§‡≥ç‡≤§‡≥Ü</h2>
      <Row className="mb-5">
        <Col md={6} className="mb-4">
          <Card>
            <Card.Body className="d-flex flex-column align-items-center">
              <input
                ref={fileInputRef} // ‚úÖ Use ref
                type="file"
                accept="image/*"
                capture="environment"
                onChange={handleImageChange}
                className="mb-3"
              />
              {image ? (
                <img src={image} alt="Selected crop" className="rounded w-100 mb-3" style={{ maxHeight: '300px', objectFit: 'cover' }} />
              ) : (
                <p className="text-muted">Upload or capture crop image / ‡≤¨‡≥Ü‡≤≥‡≥Ü ‡≤ö‡≤ø‡≤§‡≥ç‡≤∞‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Ö‡≤™‡≥ç‚Äå‡≤≤‡≥ã‡≤°‡≥ç ‡≤Æ‡≤æ‡≤°‡≤ø ‡≤Ö‡≤•‡≤µ‡≤æ ‡≤∏‡≥Ü‡≤∞‡≥Ü‡≤π‡≤ø‡≤°‡≤ø‡≤Ø‡≤ø‡≤∞‡≤ø.</p>
              )}
              <Button onClick={analyzeImage} disabled={!image || isLoading}>
                {isLoading ? 'Analyzing... / ‡≤µ‡≤ø‡≤∂‡≥ç‡≤≤‡≥á‡≤∑‡≤ø‡≤∏‡≥Å‡≤§‡≥ç‡≤§‡≤ø‡≤¶‡≥Ü...' : 'Analyze Image / ‡≤ö‡≤ø‡≤§‡≥ç‡≤∞ ‡≤µ‡≤ø‡≤∂‡≥ç‡≤≤‡≥á‡≤∑‡≤£‡≥Ü'}
              </Button>
            </Card.Body>
          </Card>
        </Col>
        <Col md={6}>
          <Card>
            <Card.Body>
              <h4 className="mb-3">Diagnosis Result / ‡≤∞‡≥ã‡≤ó ‡≤™‡≤§‡≥ç‡≤§‡≥Ü ‡≤´‡≤≤‡≤ø‡≤§‡≤æ‡≤Ç‡≤∂</h4>
{diagnosisResult ? (
  <p style={{ whiteSpace: 'pre-line', fontSize: '1.1rem' }}>
    {diagnosisResult}
  </p>
) : (
  <p>No diagnosis yet. / ‡≤á‡≤®‡≥ç‡≤®‡≥Ç ‡≤´‡≤≤‡≤ø‡≤§‡≤æ‡≤Ç‡≤∂‡≤µ‡≤ø‡≤≤‡≥ç‡≤≤.</p>
)}
              <audio ref={audioRef} controls hidden />
            </Card.Body>
          </Card>
        </Col>
      </Row>

      <h3 className="text-center mb-4">üåø Common Crop Diseases / ‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø ‡≤¨‡≥Ü‡≤≥‡≥Ü ‡≤∞‡≥ã‡≤ó‡≤ó‡≤≥‡≥Å</h3>
      <Row>
        {commonDiseases.map((disease, idx) => (
          <Col md={4} key={idx} className="mb-4">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: idx * 0.1 }}
              viewport={{ once: true }}
            >
              <div className="disease-card">
                <img src={disease.imageUrl} alt={disease.name} />
                <div className="disease-overlay">
                  <h5 className="mb-2 fw-bold">{disease.name}</h5>
                  <p className="small" style={{ whiteSpace: 'pre-line' }}>{disease.solution}</p>
                </div>
              </div>
            </motion.div>
          </Col>
        ))}
      </Row>
    </Container>
  );
};

export default ImageDiagnosisPage;